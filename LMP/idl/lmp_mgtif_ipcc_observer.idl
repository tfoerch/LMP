module lmp_ipcc
{
  interface IPCC;
};

module lmp_ipcc_observer
{
  enum IPCC_State
  {
    IPCC_Down,
    IPCC_ConfSend,
    IPCC_ConfRecv,
    IPCC_Active,
    IPCC_Up,
    IPCC_GoingDown
  };
  enum IPCC_Event
  {
    EvBringUp,
    EvCCDn,
    EvConfDone,
    EvConfErr,
    EvNewConfOK,
    EvNewConfErr,
    EvContenWin,
    EvContenLost,
    EvAdminDown,
    EvNbrGoesDn,
    EvHelloRcvd,
    EvHoldTimer,
    EvSeqNumErr,
    EvReconfig,
    EvConfRet,
    EvHelloRet,
    EvDownTimer
  };
  enum IPCC_Action
  {
    ActionSendConfig,
    ActionStopSendConfig,
    ActionResendConfig,
    ActionSendConfigAck,
    ActionSendConfigNack,
    ActionSendHello,
    ActionStopSendHello,
    ActionSetCCDownFlag,
    ActionClearCCDownFlag,
    ActionNoAction
  };

  interface IPCCObserver
  {
    void destroy();
    void eventProcessed(
      in lmp_ipcc::IPCC  anIPCC,
      in IPCC_Event      event,
      in IPCC_State      sourceState,
      in IPCC_State      targetState,
      in IPCC_Action     action);
    void peerIpccDiscovered(
      in lmp_ipcc::IPCC  anIPCC,
      in long            remoteNodeId,
      in long            remoteCCId);
  };
};
